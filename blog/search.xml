<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Web</title>
    <url>/blog/Web/Web/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>一切的开端源于博客网站的搭建</strong>&#x1F62D;</p>
<span id="more"></span>

<p>&emsp;&emsp;当初我还是一个对web一无所知的萌新，偶然看到<a href="https://blog.csdn.net/sinat_37781304/article/details/82729029">hexo史上最全搭建教程</a><br></br></p>
<p>&emsp;&emsp;I need it！</p>
</br>

<p><img src="wiki.png"><a href="https://wiki.zthxxx.me/">主题地址</a><br></br></p>
<p>&emsp;&emsp;不错，不错，过程很顺利。可是<a href="http://blog.itchenliang.club/">别人家的博客</a>为什么这么好?&#x1F62D;</p>
</br>

<img src="example.png">

</br>

<p>&emsp;&emsp;The World!</p>
</br>

<img src="blog1.png">

</br>

<p>&emsp;&emsp;差不多了，因为我的需求主要是自己知识结构的梳理（<del>才不是因为我菜</del></p>
</br>

<img src="blog2.png">

</br>

<p>&emsp;&emsp;最终效果，<a href="https://theme-next.js.org/">主题地址</a></p>
<h1 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h1><p>&emsp;&emsp;<strong>计算机网络是指将地理位置不同的具有独立功能的多台计算机及其外部设备，通过通信线路连接起来，实现资源共享和信息传递的计算机系统。</strong></p>
<p><strong>模式</strong></p>
<ol>
<li>单播（Unicast）</li>
<li>广播（Broadcast）</li>
<li>组播（Multicast）</li>
</ol>
<h2 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h2><p><strong>概念模型</strong></p>
<p>&emsp;&emsp;开放式系统互联模型（Open System Interconnection Model），即OSI</p>
<img src = "2.png">

<p><strong>常用模型</strong></p>
<p>&emsp;&emsp;互联网协议套件（Internet Protocol Suite），即IPS</p>
<img src = "3.png">

<h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><img src = "process.png">

<p><strong>为什么存在IP还需要MAC</strong></p>
<ol>
<li>先有的MAC，再有的IP，即它没有物理层到传输层的协议</li>
<li>IP会变，MAC保持不变</li>
</ol>
<p><strong>为什么需要端口</strong></p>
<p>&emsp;&emsp;确定数据对应的服务</p>
<ol>
<li>TCP端口：面向连接的、可靠的，需握手确定连接</li>
<li>UDP端口：无连接的、不可靠的，无需确定连接，发送数据就不管了</li>
</ol>
<p><strong>为什么需要三次握手</strong></p>
<ol>
<li>客户端连接请求，此请求可能是过时的</li>
<li>服务器端响应，客户端确认服务器端能响应</li>
<li>客户端响应，服务器端确认客户端能响应</li>
</ol>
<p><strong>为什么需要四次挥手</strong></p>
<ol>
<li>客户端断开请求，服务器端可能还有正在处理的数据请求</li>
<li>服务器端响应，客户端确认服务器端接收到请求</li>
<li>服务器端响应，客户端确认可以断开连接</li>
<li>客户端响应，确认收到可以断开连接</li>
</ol>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ol>
<li>网关（Gateway）：不同网络间的通道</li>
<li>代理（Proxy）：客户端-&gt;代理服务器-&gt;源服务器</li>
<li>套接字(Socket)：网络中不同主机上的应用进程之间进行双向通信的端点的抽象</li>
<li>以太网（Ethernet）：局域网技术，规定了包括物理层的连线、电子信号和介质访问控制的内容</li>
<li>互联网（Internet）：能彼此通信的设备组成的网络，使用TCP/IP协议</li>
<li>万维网（World Wide Web）：基于互联网的服务，网页组成的信息网，使用HTTP协议</li>
</ol>
<img src = "socket.png">


<h1 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h1><h2 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h2><p>&emsp;&emsp;用于检索并展示万维网信息资源的应用程序</p>
<img src = "url.png">
<img src = "render.png">
<img src = "chrome.png">


<p><strong>URL</strong></p>
<img src = "5.png">


<ol>
<li>DNS：将域名和IP地址相互映射</li>
<li>HyperText：用超链接的方法，将各种不同空间的文字信息组织在一起的网状文本</li>
<li>DOM：文档对象模型，将文档用逻辑树的形式表示</li>
</ol>
<h2 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h2><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><p>&emsp;&emsp;HyperText Markup Language，超文本标记语言，扩展超文本</p>
<div>
  <input id="exp1" class="codeexp"  type="checkbox">
  
<div class="code">
<label class="codebutton" for="exp1"></label>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span>说明文档类型</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span>根元素，所有元素的父</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span>描述文档本身的信息和相关资源</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span>表示标题</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">base</span>&gt;</span><span class="tag">&lt;/<span class="name">base</span>&gt;</span>为页面上的所有的相对链接规定默认URL或默认目标</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span>&gt;</span><span class="tag">&lt;/<span class="name">link</span>&gt;</span>定义文档与外部资源的关系</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span>&gt;</span><span class="tag">&lt;/<span class="name">meta</span>&gt;</span>提供了 HTML 文档的元数据(数据的数据信息),如字符编码、作者、描述等</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">object</span>&gt;</span><span class="tag">&lt;/<span class="name">object</span>&gt;</span> 用于包含对象，取代img等，如果未显示 object 元素，就会执行位于 <span class="tag">&lt;<span class="name">object</span>&gt;</span> 和 <span class="tag">&lt;/<span class="name">object</span>&gt;</span> 之间的代码。	</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>用于嵌入脚本, 或者引入外部脚本.</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span>用于嵌入样式(页面内).</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>定义文档的主体</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--注释--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span>定义文档区域</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>...<span class="tag">&lt;<span class="name">h6</span>&gt;</span>、<span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>粗体文本<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">code</span>&gt;</span>计算机代码<span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>强调文本<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>斜体文本<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span>键盘输入<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span>预格式化文本<span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">small</span>&gt;</span>更小的文本<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>重要的文本<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">abbr</span>&gt;</span> （缩写）</span><br><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span> （联系信息）</span><br><span class="line"><span class="tag">&lt;<span class="name">bdo</span>&gt;</span> （文字方向）</span><br><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span> （从另一个源引用的部分）</span><br><span class="line"><span class="tag">&lt;<span class="name">cite</span>&gt;</span> （工作的名称）</span><br><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span> （删除的文本）</span><br><span class="line"><span class="tag">&lt;<span class="name">ins</span>&gt;</span> （插入的文本）</span><br><span class="line"><span class="tag">&lt;<span class="name">sub</span>&gt;</span> （下标文本）</span><br><span class="line"><span class="tag">&lt;<span class="name">sup</span>&gt;</span> （上标文本）</span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span>   (分割线)</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span>   (换行)</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span>&gt;</span><span class="tag">&lt;<span class="name">map</span>&gt;</span><span class="tag">&lt;<span class="name">area</span>&gt;</span>	图片</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">caption</span>&gt;</span><span class="tag">&lt;<span class="name">colgroup</span>&gt;</span><span class="tag">&lt;<span class="name">col</span>&gt;</span><span class="tag">&lt;<span class="name">thead</span>&gt;</span><span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tfoot</span>&gt;</span>	表格</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;<span class="name">ol</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">dl</span>&gt;</span><span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span>	列表</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span>	表单，包括文本域、下拉列表、单选框、复选框等等</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span>&gt;</span>	同一个浏览器窗口中显示不止一个页面</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="handlebars"><span class="xml"> <span class="tag">&lt;<span class="name">noscript</span>&gt;</span>	脚本</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">div</span>&gt;</span>	块级元素，独占区域</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">span</span>&gt;</span>	内联元素，依附区域</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">canvas</span>&gt;</span>	绘图</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">audio</span>&gt;</span>	定义音频内容</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">video</span>&gt;</span>	定义视频（video 或者 movie）</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">source</span>&gt;</span>定义多媒体资源 <span class="tag">&lt;<span class="name">video</span>&gt;</span> 和 <span class="tag">&lt;<span class="name">audio</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">embed</span>&gt;</span>	定义嵌入的内容，比如插件。</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">track</span>&gt;</span>	为诸如 <span class="tag">&lt;<span class="name">video</span>&gt;</span> 和 <span class="tag">&lt;<span class="name">audio</span>&gt;</span> 元素之类的媒介规定外部文本轨道</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">datalist</span>&gt;</span>	定义选项列表。请与 input 元素配合使用该元素，来定义 input 可能的值。</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">keygen</span>&gt;</span>	规定用于表单的密钥对生成器字段。</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">output</span>&gt;</span>	定义不同类型的输出，比如脚本的输出。</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">article</span>&gt;</span>	定义页面独立的内容区域。</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">aside</span>&gt;</span>	定义页面的侧边栏内容。</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">bdi</span>&gt;</span>	允许您设置一段文本，使其脱离其父元素的文本方向设置。</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">command</span>&gt;</span>	定义命令按钮，比如单选按钮、复选框或按钮</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">details</span>&gt;</span>	用于描述文档或文档某个部分的细节</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">dialog</span>&gt;</span>	定义对话框，比如提示框</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">summary</span>&gt;</span>	标签包含 details 元素的标题</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">figure</span>&gt;</span>	规定独立的流内容（图像、图表、照片、代码等等）。</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">figcaption</span>&gt;</span>	定义 <span class="tag">&lt;<span class="name">figure</span>&gt;</span> 元素的标题</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">footer</span>&gt;</span>	定义 section 或 document 的页脚。</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">header</span>&gt;</span>	定义了文档的头部区域</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">mark</span>&gt;</span>	定义带有记号的文本。</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">meter</span>&gt;</span>	定义度量衡。仅用于已知最大和最小值的度量。</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">nav</span>&gt;</span>	定义导航链接的部分。</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">progress</span>&gt;</span>	定义任何类型的任务的进度。</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">ruby</span>&gt;</span>	定义 ruby 注释（中文注音或字符）。</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">rt</span>&gt;</span>	定义字符（中文注音或字符）的解释或发音。</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">rp</span>&gt;</span>	在 ruby 注释中使用，定义不支持 ruby 元素的浏览器所显示的内容。</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">section</span>&gt;</span>	定义文档中的节（section、区段）。</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">time</span>&gt;</span>	定义日期或时间。</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="tag">&lt;<span class="name">wbr</span>&gt;</span>	规定在文本中的何处适合添加换行符。</span></span></span><br></pre></td></tr></table></figure>

</div>
</div>



<h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><p>&emsp;&emsp;Cascading Style Sheets，层叠样式表，控制样式和布局。常用Font Awesome、Bootstrap、stylus</p>
<div>
  <input id="exp2" class="codeexp"  type="checkbox">
  
<div class="code">
<label class="codebutton" for="exp2"></label>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">//动画 css3</span><br><span class="line"><span class="keyword">@keyframes</span>	定义一个动画,@keyframes定义的动画名称用来被animation-name所使用。</span><br><span class="line">animation	复合属性。检索或设置对象所应用的动画特效。	</span><br><span class="line">animation-name	检索或设置对象所应用的动画名称 ,必须与规则@keyframes配合使用，因为动画名称由@keyframes定义	</span><br><span class="line">animation-duration	检索或设置对象动画的持续时间	</span><br><span class="line">animation-timing-function	检索或设置对象动画的过渡类型	</span><br><span class="line">animation-delay	检索或设置对象动画的延迟时间	</span><br><span class="line">animation-iteration-count	检索或设置对象动画的循环次数	</span><br><span class="line">animation-direction	检索或设置对象动画在循环中是否反向运动	</span><br><span class="line">animation-play-state	检索或设置对象动画的状态	</span><br><span class="line"></span><br><span class="line">//背景(Background)</span><br><span class="line">background	复合属性。设置对象的背景特性。	<span class="number">1</span></span><br><span class="line">background-attachment	设置或检索背景图像是随对象内容滚动还是固定的。必须先指定background-image属性。	<span class="number">1</span></span><br><span class="line">background-color	设置或检索对象的背景颜色。	<span class="number">1</span></span><br><span class="line">background-image	设置或检索对象的背景图像。	<span class="number">1</span></span><br><span class="line">background-position	设置或检索对象的背景图像位置。必须先指定background-image属性。	<span class="number">1</span></span><br><span class="line">background-repeat	设置或检索对象的背景图像如何铺排填充。必须先指定background-image属性。	<span class="number">1</span></span><br><span class="line">background-clip	指定对象的背景图像向外裁剪的区域。	<span class="number">3</span></span><br><span class="line">background-origin	S设置或检索对象的背景图像计算background-position时的参考原点(位置)。	<span class="number">3</span></span><br><span class="line">background-size	检索或设置对象的背景图像的尺寸大小。	<span class="number">3</span></span><br><span class="line"></span><br><span class="line">//边框(Border)和轮廓(Outline)</span><br><span class="line">border	复合属性。设置对象边框的特性。	<span class="number">1</span></span><br><span class="line">border-bottom	复合属性。设置对象底部边框的特性。	<span class="number">1</span></span><br><span class="line">border-bottom-color	设置或检索对象的底部边框颜色。	<span class="number">1</span> </span><br><span class="line">border-bottom-style	设置或检索对象的底部边框样式。	<span class="number">1</span></span><br><span class="line">border-bottom-width	设置或检索对象的底部边框宽度。	<span class="number">1</span></span><br><span class="line">border-color	置或检索对象的边框颜色。	<span class="number">1</span></span><br><span class="line">border-left	复合属性。设置对象左边边框的特性。	<span class="number">1</span></span><br><span class="line">border-left-color	设置或检索对象的左边边框颜色。	<span class="number">1</span></span><br><span class="line">border-left-style	设置或检索对象的左边边框样式。	<span class="number">1</span></span><br><span class="line">border-left-width	设置或检索对象的左边边框宽度。	<span class="number">1</span></span><br><span class="line">border-right	复合属性。设置对象右边边框的特性。	<span class="number">1</span></span><br><span class="line">border-right-color	设置或检索对象的右边边框颜色。	<span class="number">1</span></span><br><span class="line">border-right-style	设置或检索对象的右边边框样式。	<span class="number">1</span></span><br><span class="line">border-right-width	设置或检索对象的右边边框宽度。	<span class="number">1</span></span><br><span class="line">border-style	设置或检索对象的边框样式。	<span class="number">1</span></span><br><span class="line">border-top	复合属性。设置对象顶部边框的特性。	<span class="number">1</span></span><br><span class="line">border-top-color	设置或检索对象的顶部边框颜色	<span class="number">1</span></span><br><span class="line">border-top-style	设置或检索对象的顶部边框样式。	<span class="number">1</span></span><br><span class="line">border-top-width	设置或检索对象的顶部边框宽度。	<span class="number">1</span></span><br><span class="line">border-width	设置或检索对象的边框宽度。	<span class="number">1</span></span><br><span class="line">outline	复合属性。设置或检索对象外的线条轮廓。	<span class="number">2</span></span><br><span class="line">outline-color	设置或检索对象外的线条轮廓的颜色。	<span class="number">2</span></span><br><span class="line">outline-style	设置或检索对象外的线条轮廓的样式。	<span class="number">2</span></span><br><span class="line">outline-width	设置或检索对象外的线条轮廓的宽度。	<span class="number">2</span></span><br><span class="line">border-bottom-left-radius	设置或检索对象的左下角圆角边框。提供<span class="number">2</span>个参数，<span class="number">2</span>个参数以空格分隔，每个参数允许设置<span class="number">1</span>个参数值，第<span class="number">1</span>个参数表示水平半径，第<span class="number">2</span>个参数表示垂直半径，如第<span class="number">2</span>个参数省略，则默认等于第<span class="number">1</span>个参数	<span class="number">3</span></span><br><span class="line">border-bottom-right-radius	设置或检索对象的右下角圆角边框。	<span class="number">3</span></span><br><span class="line">border-image	设置或检索对象的边框样式使用图像来填充。	<span class="number">3</span></span><br><span class="line">border-image-outset	规定边框图像超过边框的量。	<span class="number">3</span></span><br><span class="line">border-image-repeat	规定图像边框是否应该被重复（repeated）、拉伸（stretched）或铺满（rounded）。	<span class="number">3</span></span><br><span class="line">border-image-slice	规定图像边框的向内偏移。	<span class="number">3</span></span><br><span class="line">border-image-source	规定要使用的图像，代替 border-style 属性中设置的边框样式。	<span class="number">3</span></span><br><span class="line">border-image-width	规定图像边框的宽度。	<span class="number">3</span></span><br><span class="line">border-radius	设置或检索对象使用圆角边框。	<span class="number">3</span></span><br><span class="line">border-top-left-radius	定义左上角边框的形状。	<span class="number">3</span></span><br><span class="line">border-top-right-radius	定义右上角边框的形状。	<span class="number">3</span></span><br><span class="line">box-decoration-break	规定行内元素被折行	<span class="number">3</span></span><br><span class="line">box-shadow	向方框添加一个或多个阴影。	<span class="number">3</span></span><br><span class="line"></span><br><span class="line">//盒子(Box) css3</span><br><span class="line">overflow-x	如果内容溢出了元素内容区域，是否对内容的左/右边缘进行裁剪。	</span><br><span class="line">overflow-y	如果内容溢出了元素内容区域，是否对内容的上/下边缘进行裁剪。	</span><br><span class="line">overflow-style	规定溢出元素的首选滚动方法。	</span><br><span class="line">rotation	围绕由 rotation-point 属性定义的点对元素进行旋转。	</span><br><span class="line">rotation-point	定义距离上左边框边缘的偏移点。	</span><br><span class="line"></span><br><span class="line">//颜色</span><br><span class="line">color-profile	允许使用源的颜色配置文件的默认以外的规范</span><br><span class="line">opacity	设置一个元素的透明度级别</span><br><span class="line">rendering-intent	允许超过默认颜色配置文件渲染意向的其他规范</span><br></pre></td></tr></table></figure>
</div>
</div>


<h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><p>弱类型动态语言，Web自然选择的结果</p>
<div>
  <input id="exp3" class="codeexp"  type="checkbox">
  
<div class="code">
<label class="codebutton" for="exp3"></label>


<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>
</div>
</div>

<h3 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h3><ol>
<li>XML：eXtensible Markup Language，可扩展标记语言，使用标记结构传输和存储数据</li>
<li>YAML：YAML Ain’t a Markup Language，表达资料序列化格式的语言</li>
<li>JSON：JavaScript Object Notation，基于JS的数据格式</li>
</ol>
<h3 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h3><ol>
<li>矢量图：根据几何特性绘制的图形，图像不会失真</li>
<li>jQuery：JS库</li>
<li>Nunjucks：JS模板引擎</li>
<li>EJS：JS模板引擎</li>
<li>V8引擎：执行JS的运行时环境，性能强</li>
<li>node.js：服务端JS环境，基于V8</li>
<li>AngularJS：前端框架</li>
<li>Vue：前端框架</li>
<li>Pjax：局部刷新技术</li>
</ol>
<h1 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h1><h2 id="Blog"><a href="#Blog" class="headerlink" title="Blog"></a>Blog</h2><p>&emsp;&emsp;搭建简单，不再赘述</p>
<h3 id="Errors"><a href="#Errors" class="headerlink" title="Errors"></a>Errors</h3><p><strong>第一级Toc失效</strong></p>
<img src="error1.png">
<img src="error3.png">

<p>&emsp;&emsp;Google、Baidu、Github无果</p>
<pre><code>    发现卸载markdown-it就好了
    npm un hexo-renderer-markdown-it
    npm i hexo-renderer-marked --save
</code></pre>
<p>&emsp;&emsp;原因可能是NEXT有些字符不能识别（我的肉肉&#x1F62D;</p>
<img src="error4.png">


<h2 id="django"><a href="#django" class="headerlink" title="django"></a>django</h2><p>基于Python的 Web 框架</p>
<div>
  <input id="exp4" class="codeexp"  type="checkbox">
  
<div class="code">
<label class="codebutton" for="exp4"></label>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//安装，前提：python、virtualenvwrapper-win虚拟环境</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">pip install virtualenvwrapper-win —安装虚拟环境</span></span><br><span class="line"><span class="comment">deactivate —退出当前的Python虚拟环境</span></span><br><span class="line"><span class="comment">workon — 列出可用的所有虚拟环境</span></span><br><span class="line"><span class="comment">workon name_of_environment —激活特定的Python虚拟环境</span></span><br><span class="line"><span class="comment">rmvirtualenv name_of_environment — 移除特定的虚拟环境</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">$ mkvirtualenv my_django_environment <span class="comment">//创建虚拟环境</span></span><br><span class="line">$ workon my_django_environment       <span class="comment">//进入虚拟环境</span></span><br><span class="line">$ pip install django                 <span class="comment">//安装Django</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//新建站点</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">py -m django --version				//查看django版本</span></span><br><span class="line"><span class="comment">django-admin startproject mytestsite  //创建站点</span></span><br><span class="line"><span class="comment">python manage.py runserver [端口号]         //运行站点</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//文件结构</span></span><br><span class="line">mytestsite/</span><br><span class="line">    manage.py         <span class="comment">//创建应用，和数据库通讯，启动开发用网络服务器</span></span><br><span class="line">    mytestsite/</span><br><span class="line">        settings.py   <span class="comment">//所有的网站设置</span></span><br><span class="line">        urls.py       <span class="comment">//定义了网站url到view的映射</span></span><br><span class="line">        wsgi.py       <span class="comment">//帮助Django应用和网络服务器间的通讯</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//应用</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">python manage.py startapp app_name   //创建应用</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">mytestsite/</span><br><span class="line">    manage.py</span><br><span class="line">    mytestsite/</span><br><span class="line">    app_name/</span><br><span class="line">    	views.py  	<span class="comment">//视图</span></span><br><span class="line">    	models.py  	<span class="comment">//模型</span></span><br><span class="line">    	tests.py 	<span class="comment">//测试</span></span><br><span class="line">    	admin.py 	<span class="comment">//网站管理设置</span></span><br><span class="line">    	apps.py  	<span class="comment">//注册应用</span></span><br><span class="line">        __init__.py   <span class="comment">//这个文件作为Python包在项目的其他部分使用</span></span><br><span class="line">        migrations/  <span class="comment">//存储“migrations”</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//视图，负责返回请求对象或404</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">urls.py/                                                    //链接URL映射器</span></span><br><span class="line"><span class="comment">调用视图需要将视图映射到URL</span></span><br><span class="line"><span class="comment">创建URLconf，urls.py</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//views.py</span></span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line">def index(request):</span><br><span class="line">	<span class="keyword">return</span> HttpResponse(<span class="string">&quot;Hello World&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//urls.py，命名空间</span></span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line">urlpatterns = [</span><br><span class="line">	path(<span class="string">&#x27;&#x27;</span>, views.index, name = <span class="string">&#x27;index&#x27;</span>)</span><br><span class="line">]</span><br><span class="line"><span class="comment">//mysite/urls.py</span></span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> include, path</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;app_name/&#x27;</span>, include(<span class="string">&#x27;app_name.urls&#x27;</span>)), <span class="comment">//include函数，绝对路径改为相对路径？</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment">//数据库</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">$ python manage.py migrate根据settings.py/INSTALLED_APPS/设置和创建必要的数据库表</span></span><br><span class="line"><span class="comment">settings.py/DATABASES/                                      //配置数据库</span></span><br><span class="line"><span class="comment">ENGINE：&#x27;django.db.backends.sqlite3&#x27;, &#x27;django.db.backends.postgresql&#x27;, &#x27;django.db.backends.mysql&#x27;, or &#x27;django.db.backends.oracle&#x27;								 //数据库引擎</span></span><br><span class="line"><span class="comment">NAME（SQLite用绝对路径，其他数据库需添加USER, PASSWORD, HOST等）   //数据库名</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//语法</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> 表名1(<span class="title">models</span>.<span class="title">Model</span>):</span></span><br><span class="line"><span class="class">    项1 </span>= models.CharField(max_length=<span class="number">200</span>)	<span class="comment">//数据类型</span></span><br><span class="line">    项<span class="number">2</span> = models.DateTimeField(<span class="string">&#x27;date published&#x27;</span>) <span class="comment">//数据类型</span></span><br><span class="line">    def __str__(self):      			<span class="comment">//方便处理交互</span></span><br><span class="line">        <span class="keyword">return</span> self.项<span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> 表名2(<span class="title">models</span>.<span class="title">Model</span>):</span></span><br><span class="line"><span class="class">    项1 </span>= models.ForeignKey(表名<span class="number">1</span>, on_delete=models.CASCADE)	<span class="comment">//级联，外键</span></span><br><span class="line">    项<span class="number">2</span> = models.CharField(max_length=<span class="number">200</span>)</span><br><span class="line">    项<span class="number">3</span> = models.IntegerField(<span class="keyword">default</span>=<span class="number">0</span>)</span><br><span class="line">    def __str__(self):</span><br><span class="line">        <span class="keyword">return</span> self.项<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//注册</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">settings.py/INSTALLED_APPS/添加app_name.apps.app_nameConfig  //注册应用</span></span><br><span class="line"><span class="comment">settings.py/TIME_ZONE									     //时区设置</span></span><br><span class="line"><span class="comment">$ python manage.py makemigrations app_name      //提交更改保存为迁移</span></span><br><span class="line"><span class="comment">迁移是Django为模型保存改变的方式，在migrations文件夹下可以查看编辑</span></span><br><span class="line"><span class="comment">$ python manage.py sqlmigrate app_name 编号 查看数据库信息</span></span><br><span class="line"><span class="comment">$ python manage.py migrate                     //应用迁移</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//API</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">$ python manage.py shell</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">from</span> app_name.models <span class="keyword">import</span> 表<span class="number">1</span>, 表<span class="number">2</span>  <span class="comment">// 导入类</span></span><br><span class="line">表<span class="number">1.</span>objects.all()                     <span class="comment">//查看记录</span></span><br><span class="line"><span class="keyword">from</span> django.utils <span class="keyword">import</span> timezone    <span class="comment">//时间</span></span><br><span class="line">变量名 = 表<span class="number">1</span>(项<span class="number">1</span> = <span class="string">&quot;&quot;</span>, 项<span class="number">2</span> = timezone.now())  <span class="comment">//一个类</span></span><br><span class="line">变量名.save()</span><br><span class="line">变量名.id 								<span class="comment">//创建ID</span></span><br><span class="line">变量名.项<span class="number">1</span>                            <span class="comment">//访问元素</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">表1.objects.filter(id=1)		//获得对象</span></span><br><span class="line"><span class="comment">表1.objects.filter(项1__startswith=&#x27;What&#x27;)</span></span><br><span class="line"><span class="comment">表1.objects.get(项2__year=current_year)</span></span><br><span class="line"><span class="comment">表1.objects.get(id=1)</span></span><br><span class="line"><span class="comment">.count()                 //计数</span></span><br><span class="line"><span class="comment">.delete()               //删除对象</span></span><br><span class="line"><span class="comment">exit()					//退出shell</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">变量名<span class="number">2</span> = 表<span class="number">1.</span>objects.get(pk = <span class="number">1</span>) 				<span class="comment">//获得对象</span></span><br><span class="line">变量名<span class="number">2.</span>表2_set.all()						<span class="comment">//查看对象的关联对象集</span></span><br><span class="line">变量名<span class="number">2.</span>表2_set.create(项<span class="number">2</span> = ，项<span class="number">3</span> = )				<span class="comment">//表2名需要小写</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//管理用户，cmd下命令</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">$ python manage.py createsuperuser</span></span><br><span class="line"><span class="comment">Username: admin</span></span><br><span class="line"><span class="comment">Email address: admin@example.com</span></span><br><span class="line"><span class="comment">Password: **********</span></span><br><span class="line"><span class="comment">Password (again): *********</span></span><br><span class="line"><span class="comment">Superuser created successfully.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//在管理页面添加app</span></span><br><span class="line">app_name/admin.py 添加</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> 表名<span class="number">1</span></span><br><span class="line">admin.site.register(表名<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//模板</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">setting/TEMPLATES描述Django将如何加载和呈现模板</span></span><br><span class="line"><span class="comment">app_name/创建文件夹templates，在里面再建app_name文件夹，在里面建index.html</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">def index(request):</span><br><span class="line">	username_list = Username.objects.all()</span><br><span class="line">	context = &#123;											<span class="comment">//模板中使用的变量</span></span><br><span class="line">		<span class="string">&#x27;username_list&#x27;</span>: username_list,</span><br><span class="line">	&#125;</span><br><span class="line">	template = loader.get_template(<span class="string">&#x27;app_name/index.html&#x27;</span>)  <span class="comment">//视图中获取模板</span></span><br><span class="line">	<span class="keyword">return</span> HttpResponse(template.render(context, request))</span><br><span class="line">	或</span><br><span class="line">	<span class="keyword">return</span> render(request, <span class="string">&#x27;app_name/index.html&#x27;</span>, context)</span><br><span class="line"><span class="comment">//404页面</span></span><br><span class="line">def detail(request, id):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        username = Username.objects.get(pk=id)</span><br><span class="line">    except Username.DoesNotExist:</span><br><span class="line">        raise Http404(<span class="string">&quot;Username does not exist&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;app_name/detail.html&#x27;</span>, &#123;<span class="string">&#x27;username&#x27;</span>: username&#125;)</span><br><span class="line">	或</span><br><span class="line">	username = get_object_or_404(Username, pk=id)</span><br><span class="line"><span class="comment">//index.html</span></span><br><span class="line">&#123;% <span class="keyword">for</span> username <span class="keyword">in</span> username_list %&#125;  			<span class="comment">//命令</span></span><br><span class="line">&#123;&#123; username &#125;&#125;									<span class="comment">//取值</span></span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试，测试系统将自动在名称以test开头的任何文件中查找</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Django 的单元测试采用 Python 的标准模块： unittest</span></span><br><span class="line"><span class="comment">app_name/新建tests.py</span></span><br><span class="line"><span class="comment">1. 对于每一个测试方法都会将setUp()和tearDown()方法执行一遍</span></span><br><span class="line"><span class="comment">2. 会单独新建一个测试数据库来进行数据库的操作方面的测试，默认在测试完成后销毁</span></span><br><span class="line"><span class="comment">3. 在测试方法中对数据库进行增删操作，最后都会被清除</span></span><br><span class="line"><span class="comment">4. django单元测试时为了模拟生产环境，会修改settings中的变量</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">from</span> django.test <span class="keyword">import</span> Client</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Client</span>(<span class="title">enforce_csrf_checks</span></span>=False, **defaults)[source]   <span class="comment">//测试客户端</span></span><br><span class="line">Client().get()												<span class="comment">//请求页面</span></span><br><span class="line">Client().post()												<span class="comment">//提交表单</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//缓存</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">settings.py添加</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">CACHES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;BACKEND&#x27;</span>: <span class="string">&#x27;django.core.cache.backends.db.DatabaseCache&#x27;</span>,	<span class="comment">//数据库缓存</span></span><br><span class="line">        <span class="string">&#x27;LOCATION&#x27;</span>: <span class="string">&#x27;my_cache_table&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//代码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//models</span></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"># Create your models here.</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Username</span>(<span class="title">models</span>.<span class="title">Model</span>):</span></span><br><span class="line"><span class="class">    <span class="title">Username_text</span> </span>= models.CharField(max_length=<span class="number">200</span>)</span><br><span class="line">    def __str__(self):</span><br><span class="line">        <span class="keyword">return</span> self.Username_text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Password</span>(<span class="title">models</span>.<span class="title">Model</span>):</span></span><br><span class="line"><span class="class">    <span class="title">username</span> </span>= models.ForeignKey(Username, on_delete=models.CASCADE)</span><br><span class="line">    password_text = models.CharField(max_length=<span class="number">200</span>)</span><br><span class="line">    def __str__(self):</span><br><span class="line">        <span class="keyword">return</span> self.password_text</span><br><span class="line"></span><br><span class="line"><span class="comment">//views</span></span><br><span class="line"></span><br><span class="line"># Create your views here.</span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render, redirect</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"># Create your views here.</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Username</span><br><span class="line"><span class="keyword">from</span> django.template <span class="keyword">import</span> loader</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line">def login(request):</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&quot;GET&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> render(request, <span class="string">&quot;login/login.html&quot;</span>)</span><br><span class="line">    username = request.POST.get(<span class="string">&quot;username&quot;</span>)</span><br><span class="line">    password = request.POST.get(<span class="string">&quot;pwd&quot;</span>)</span><br><span class="line"></span><br><span class="line">    user_obj = models.Username.objects.filter(Username_text=username).first()</span><br><span class="line">    <span class="keyword">if</span> not user_obj:</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&quot;/login/&quot;</span>)</span><br><span class="line">    user_obj2 = user_obj.password_set.filter(password_text=password).first()</span><br><span class="line">    print(user_obj.Username_text)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> not user_obj2:</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&quot;/login/&quot;</span>)</span><br><span class="line">    <span class="attr">else</span>:</span><br><span class="line">        rep = redirect(<span class="string">&quot;/index/&quot;</span>)</span><br><span class="line">        rep.set_cookie(<span class="string">&quot;is_login&quot;</span>, True)</span><br><span class="line">        <span class="keyword">return</span> rep</span><br><span class="line">  </span><br><span class="line">def index(request):</span><br><span class="line">    print(request.COOKIES.get(<span class="string">&#x27;is_login&#x27;</span>))</span><br><span class="line">    status = request.COOKIES.get(<span class="string">&#x27;is_login&#x27;</span>) # 收到浏览器的再次请求,判断浏览器携带的cookie是不是登录成功的时候响应的 cookie</span><br><span class="line">    <span class="keyword">if</span> not status:</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&#x27;/login/&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&quot;login/index.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def logout(request):</span><br><span class="line">    rep = redirect(<span class="string">&#x27;/login/&#x27;</span>)</span><br><span class="line">    rep.delete_cookie(<span class="string">&quot;is_login&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> rep # 点击注销后执行,删除cookie,不再保存用户状态，并弹到登录页面</span><br><span class="line">   </span><br><span class="line">def order(request):</span><br><span class="line">    print(request.COOKIES.get(<span class="string">&#x27;is_login&#x27;</span>))</span><br><span class="line">    status = request.COOKIES.get(<span class="string">&#x27;is_login&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> not status:</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&#x27;/login/&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&quot;login/order.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//urls</span></span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;index/&#x27;</span>, views.index, name=<span class="string">&#x27;index&#x27;</span>),</span><br><span class="line">    path(<span class="string">&#x27;login/&#x27;</span>, views.login, name=<span class="string">&#x27;login&#x27;</span>),</span><br><span class="line">    path(<span class="string">&#x27;logout/&#x27;</span>, views.logout, name=<span class="string">&#x27;logout&#x27;</span>),</span><br><span class="line">    path(<span class="string">&#x27;order/&#x27;</span>, views.order, name=<span class="string">&#x27;order&#x27;</span>),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//tests</span></span><br><span class="line"><span class="keyword">from</span> django.test <span class="keyword">import</span> TestCase</span><br><span class="line"><span class="keyword">from</span> django.test <span class="keyword">import</span> Client</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Password, Username</span><br><span class="line"></span><br><span class="line"># Create your tests here.</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyTestClass</span>(<span class="title">TestCase</span>):</span></span><br><span class="line"><span class="class">    </span></span><br><span class="line"><span class="class">    @<span class="title">classmethod</span></span></span><br><span class="line"><span class="class">    <span class="title">def</span> <span class="title">setUp</span>(<span class="title">self</span>):</span></span><br><span class="line"><span class="class">        <span class="title">a</span> </span>= Username.objects.create(Username_text = <span class="string">&#x27;123456&#x27;</span>)</span><br><span class="line">        a.password_set.create(password_text = <span class="string">&#x27;123456&#x27;</span>)</span><br><span class="line">        print(<span class="string">&quot;======in setUp&quot;</span>)</span><br><span class="line"></span><br><span class="line">    def test_login(self):</span><br><span class="line">        c = Client()</span><br><span class="line">        b = c.get(<span class="string">&#x27;/login/&#x27;</span>)</span><br><span class="line">        self.assertEqual(b.status_code, <span class="number">200</span>)</span><br><span class="line"></span><br><span class="line">    def test_index(self):</span><br><span class="line">        c = Client()</span><br><span class="line">        c.post(<span class="string">&#x27;/login/&#x27;</span>, &#123;<span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;123456&#x27;</span>, <span class="string">&#x27;pwd&#x27;</span>: <span class="string">&#x27;123456&#x27;</span>&#125;)</span><br><span class="line">        d = c.get(<span class="string">&#x27;/index/&#x27;</span>)</span><br><span class="line">        self.assertEqual(d.status_code, <span class="number">200</span>)</span><br><span class="line"></span><br><span class="line">    def test_order(self):</span><br><span class="line">        c = Client()</span><br><span class="line">        c.post(<span class="string">&#x27;/login/&#x27;</span>, &#123;<span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;123456&#x27;</span>, <span class="string">&#x27;pwd&#x27;</span>: <span class="string">&#x27;123456&#x27;</span>&#125;)</span><br><span class="line">        d = c.get(<span class="string">&#x27;/order/&#x27;</span>)</span><br><span class="line">        self.assertEqual(d.status_code, <span class="number">200</span>)</span><br><span class="line"></span><br><span class="line">    def tearDown(self):</span><br><span class="line">        print(<span class="string">&quot;======in tearDown&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>


</div>
</div>



<h2 id="NetDisk"><a href="#NetDisk" class="headerlink" title="NetDisk"></a>NetDisk</h2><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>apache压力测试<br>进入apache官网 <a href="http://httpd.apache.org/">http://httpd.apache.org/</a> 下载apache即可<br>以windows环境下，apache安装路径为C:\apache\Apache24\为例</p>
<p>打开终端，输入命令<br>cd C:\apache\Apache24\bin<br>即可启动ab<br><a href="https://www.apachehaus.com/cgi-bin/download.plx">https://www.apachehaus.com/cgi-bin/download.plx</a><br><a href="https://www.jianshu.com/p/43d04d8baaf7">https://www.jianshu.com/p/43d04d8baaf7</a></p>
<p>pip install selenium</p>
<p>先安装好Selenium库和对应浏览器的WebDriver驱动,比如我用的是Chrome，则相对应安装的是ChromeDriver。</p>
<p>前者使用pip就可以很方便地安装，后者要到相应网站下载，解压后就是一个exe文件（windows系统里面），然后要在系统里面加上环境变量，推荐放在Python 的 Scripts 目录下。</p>
<p>ChromeDriver的官方网站：<a href="https://sites.google.com/a/chromium.org/chromedriver/downloads">https://sites.google.com/a/chromium.org/chromedriver/downloads</a></p>
]]></content>
      <categories>
        <category>Web</category>
      </categories>
      <tags>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title>HelloWorld</title>
    <url>/blog/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB/HelloWorld/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>怎么样才是相对成功的人生？</strong></p>
<span id="more"></span>
<ol>
<li>努力但痛苦，满足的后半生？</li>
<li>摆烂但快乐，满足的前半生？</li>
</ol>
<img src="cover.jpg" style="width: 500px; height: 600px;;">

</br>

<p><strong>可是，手中的牌只有这样，不断选择，收束一切可能性！</strong></p>
</br>
<img src="2.jpg" style="width: 500px; height: 600px;"> 

<p><strong>生存是悲伤空虚的。终归失去，迟早消失，但是也要丑陋地追寻</strong></p>
</br>
<img src="3.jpg" style="width: 500px; height: 800px;">

<p><strong>每个人心中都有一束光，不是吗？</strong></p>
<hr>
<p><strong>图片作者</strong></p>
<ol>
<li><a href="https://www.pixiv.net/artworks/80734187">游戏人生</a></li>
<li><a href="https://www.pixiv.net/artworks/93557699">东京吃货</a></li>
<li><a href="https://www.pixiv.net/artworks/94461366">魔法少女</a></li>
</ol>
]]></content>
      <categories>
        <category>程序员的自我修养</category>
      </categories>
  </entry>
  <entry>
    <title>Learn</title>
    <url>/blog/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB/Learn/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>高效地学习需要高效的方法</strong></p>
<span id="more"></span>

<p>先贴上大佬的《<strong>劝学</strong>》<br><img src="1.jpg"></p>
<div class="pwrapper">
  <input id="exp1" class="pexp"  type="checkbox">
        <div class="ptext">
            <label class="pbtn" for="exp1"></label>
    <p>
        &emsp;&emsp;君子曰：学不可以已。</p>
        <p>&emsp;&emsp;青，取之于蓝，而青于蓝；冰，水为之，而寒于水。木直中绳，輮以为轮，其曲中规。虽有槁暴，不复挺者，輮使之然也。故木受绳则直，金就砺则利，君子博学而日参省乎己，则知明而行无过矣。</p><p>&emsp;&emsp;故不登高山，不知天之高也；不临深溪，不知地之厚也；不闻先王之遗言，不知学问之大也。干、越、夷、貉之子，生而同声，长而异俗，教使之然也。诗曰：“嗟尔君子，无恒安息。靖共尔位，好是正直。神之听之，介尔景福。”神莫大于化道，福莫长于无祸。</p><p>&emsp;&emsp;吾尝终日而思矣，不如须臾之所学也；吾尝跂而望矣，不如登高之博见也。登高而招，臂非加长也，而见者远；顺风而呼，声非加疾也，而闻者彰。假舆马者，非利足也，而致千里；假舟楫者，非能水也，而绝江河。君子生非异也，善假于物也。</p><p>&emsp;&emsp;南方有鸟焉，名曰蒙鸠，以羽为巢，而编之以发，系之苇苕，风至苕折，卵破子死。巢非不完也，所系者然也。西方有木焉，名曰射干，茎长四寸，生于高山之上，而临百仞之渊，木茎非能长也，所立者然也。蓬生麻中，不扶而直；白沙在涅，与之俱黑。兰槐之根是为芷，其渐之滫，君子不近，庶人不服。其质非不美也，所渐者然也。故君子居必择乡，游必就士，所以防邪辟而近中正也。</p><p>&emsp;&emsp;物类之起，必有所始。荣辱之来，必象其德。肉腐出虫，鱼枯生蠹。怠慢忘身，祸灾乃作。强自取柱，柔自取束。邪秽在身，怨之所构。施薪若一，火就燥也，平地若一，水就湿也。草木畴生，禽兽群焉，物各从其类也。是故质的张，而弓矢至焉；林木茂，而斧斤至焉；树成荫，而众鸟息焉。醯酸，而蜹聚焉。故言有招祸也，行有招辱也，君子慎其所立乎！</p><p>&emsp;&emsp;积土成山，风雨兴焉；积水成渊，蛟龙生焉；积善成德，而神明自得，圣心备焉。故不积跬步，无以至千里；不积小流，无以成江海。骐骥一跃，不能十步；驽马十驾，功在不舍。锲而舍之，朽木不折；锲而不舍，金石可镂。蚓无爪牙之利，筋骨之强，上食埃土，下饮黄泉，用心一也。蟹六跪而二螯，非蛇鳝之穴无可寄托者，用心躁也。(江海 一作：江河)</p><p>&emsp;&emsp;是故无冥冥之志者，无昭昭之明；无惛惛之事者，无赫赫之功。行衢道者不至，事两君者不容。目不能两视而明，耳不能两听而聪。螣蛇无足而飞，鼫鼠五技而穷。《诗》曰：“尸鸠在桑，其子七兮。淑人君子，其仪一兮。其仪一兮，心如结兮！”故君子结于一也。</p><p>&emsp;&emsp;昔者瓠巴鼓瑟，而流鱼出听；伯牙鼓琴，而六马仰秣。故声无小而不闻，行无隐而不形 。玉在山而草木润，渊生珠而崖不枯。为善不积邪？安有不闻者乎？</p><p>&emsp;&emsp;学恶乎始？恶乎终？曰：其数则始乎诵经，终乎读礼；其义则始乎为士，终乎为圣人， 真积力久则入，学至乎没而后止也。故学数有终，若其义则不可须臾舍也。为之，人也；舍 之，禽兽也。故书者，政事之纪也；诗者，中声之所止也；礼者，法之大分，类之纲纪也。 故学至乎礼而止矣。夫是之谓道德之极。礼之敬文也，乐之中和也，诗书之博也，春秋之微 也，在天地之间者毕矣。</p><p>&emsp;&emsp;君子之学也，入乎耳，箸乎心，布乎四体，形乎动静。端而言，蝡而动，一可以为法则。小人之学也，入乎耳，出乎口；口耳之间，则四寸耳，曷足以美七尺之躯哉！古之学者为己，今之学者为人。君子之学也，以美其身；小人之学也，以为禽犊。故不问而告谓之傲，问一而告二谓之囋。傲、非也，囋、非也；君子如向矣。</p><p>&emsp;&emsp;学莫便乎近其人。礼乐法而不说，诗书故而不切，春秋约而不速。方其人之习君子之说，则尊以遍矣，周于世矣。故曰：学莫便乎近其人。学之经莫速乎好其人，隆礼次之。上不能好其人，下不能隆礼，安特将学杂识志，顺诗书而已耳。则末世穷年，不免为陋儒而已。将原先王，本仁义，则礼正其经纬蹊径也。若挈裘领，诎五指而顿之，顺者不可胜数也。不道礼宪，以诗书为之，譬之犹以指测河也，以戈舂黍也，以锥餐壶也，不可以得之矣。故隆礼，虽未明，法士也；不隆礼，虽察辩，散儒也。</p><p>&emsp;&emsp;问楛者，勿告也；告楛者，勿问也；说楛者，勿听也。有争气者，勿与辩也。故必由其道至，然后接之；非其道则避之。故礼恭，而后可与言道之方；辞顺，而后可与言道之理；色从而后可与言道之致。故未可与言而言，谓之傲；可与言而不言，谓之隐；不观气色而言，谓瞽。故君子不傲、不隐、不瞽，谨顺其身。诗曰：“匪交匪舒，天子所予。”此之谓也。</p><p>&emsp;&emsp;百发失一，不足谓善射；千里蹞步不至，不足谓善御；伦类不通，仁义不一，不足谓善学。学也者，固学一之也。一出焉，一入焉，涂巷之人也；其善者少，不善者多，桀纣盗跖也；全之尽之，然后学者也。</p><p>&emsp;&emsp;君子知夫不全不粹之不足以为美也，故诵数以贯之，思索以通之，为其人以处之，除其害者以持养之。使目非是无欲见也，使耳非是无欲闻也，使口非是无欲言也，使心非是无欲虑也。及至其致好之也，目好之五色，耳好之五声，口好之五味，心利之有天下。是故权利不能倾也，群众不能移也，天下不能荡也。生乎由是，死乎由是，夫是之谓德操。德操然后能定，能定然后能应。能定能应，夫是之谓成人。天见其明，地见其光，君子贵其全也。</p><p style="text-align: right;">——先秦·荀子《劝学》
    </p>
</div>
</div>




<h1 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h1><p><strong>主观方面的方法也要遵循生物的规律</strong><br><strong>先上</strong> <a class="pa" href="https://www.bilibili.com/video/BV1qL4y187sW">链接</a></p>
<img src="1.png">

<p><strong>本质</strong>：获取新信息和新知识的神经过程</p>
<ol>
<li>非联合学习：习惯化和敏感化</li>
<li>联合学习：经典条件反射和操作式条件反射</li>
</ol>
<h1 id="记忆"><a href="#记忆" class="headerlink" title="记忆"></a>记忆</h1><p><strong>本质</strong>：对获取信息的编码、巩固、保存和读出的神经过程</p>
<img src="2.png">

<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>本质</strong></p>
<p>沉淀：人类文明是其历史的沉淀，人是其过去的沉淀</p>
<p>进化：减少不利思维、行为的权重</p>
<p><strong>前提</strong></p>
<p>环境的影响：模仿、竞争、启迪（良好的身心状态）</p>
<p>心理的稳定：自制、自驱、自信（提取信息需要主观的专注）</p>
<p><strong>方法</strong></p>
<p>继承：终日而思不如须臾所学，跂而望矣不如登高博见</p>
<p>巩固：不积跬步无以至千里，不积小流无以成江海</p>
<p>压力：不登高山，不知天之高；不临深溪，不知地之厚</p>
<p><em>分类整理、形象联系记忆</em></p>
]]></content>
      <categories>
        <category>程序员的自我修养</category>
      </categories>
  </entry>
</search>
